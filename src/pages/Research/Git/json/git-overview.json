{
    "introduction": {
      "definition": {
        "title": "분산 버전 관리 시스템",
        "description": "코드의 버전을 관리하는 도구로, 여러 개발자가 협업하면서 코드를 효율적으로 관리할 수 있게 해주는 시스템",
        "keyFeatures": [
          "중앙 서버 없이 로컬에서 버전 관리 가능",
          "각 개발자가 전체 저장소의 복사본을 보유",
          "오프라인 작업 지원",
          "빠른 처리 속도"
        ]
      },
      "advantages": [
        {
          "title": "오프라인 작업",
          "description": "인터넷 연결 없이도 로컬에서 작업 가능"
        },
        {
          "title": "빠른 처리",
          "description": "로컬 저장소에서 대부분의 작업이 이루어져 빠른 속도 보장"
        },
        {
          "title": "백업 용이성",
          "description": "모든 클론이 완전한 백업 역할"
        },
        {
          "title": "실험적 개발 용이",
          "description": "브랜치를 통한 안전한 실험 가능"
        }
      ]
    },
    "coreComponents": {
      "workspace": {
        "workingDirectory": {
          "description": "실제 작업이 이루어지는 공간",
          "status": "파일 수정이 직접 이루어지는 영역"
        },
        "stagingArea": {
          "description": "커밋할 변경사항을 준비하는 공간",
          "status": "git add 명령어로 파일을 스테이징"
        },
        "repository": {
          "description": "버전 관리가 이루어지는 공간",
          "types": [
            {
              "name": "로컬 저장소",
              "description": "개발자의 컴퓨터에 있는 저장소"
            },
            {
              "name": "원격 저장소",
              "description": "서버에 있는 저장소"
            }
          ]
        }
      },
      "basicConcepts": {
        "commit": {
          "description": "변경사항의 스냅샷",
          "properties": [
            "고유한 해시 ID",
            "작성자 정보",
            "타임스탬프",
            "커밋 메시지"
          ]
        },
        "branch": {
          "description": "독립적인 작업 공간",
          "usage": [
            "새로운 기능 개발",
            "버그 수정",
            "실험적 변경"
          ]
        },
        "merge": {
          "description": "한 브랜치의 변경사항을 다른 브랜치에 통합",
          "types": [
            "Fast-forward merge",
            "3-way merge",
            "Squash merge"
          ]
        }
      }
    },
    "comparisonWithOthers": {
      "vsSubversion": {
        "type": "중앙집중식 vs 분산식",
        "differences": [
          {
            "aspect": "저장소",
            "svn": "중앙 서버에 단일 저장소",
            "git": "각 개발자가 전체 저장소 복사본 보유"
          },
          {
            "aspect": "작업방식",
            "svn": "항상 서버 연결 필요",
            "git": "로컬에서 대부분의 작업 가능"
          },
          {
            "aspect": "브랜칭",
            "svn": "무거운 브랜치 작업",
            "git": "가벼운 브랜치 작업"
          },
          {
            "aspect": "속도",
            "svn": "서버 의존적인 속도",
            "git": "로컬 작업으로 인한 빠른 속도"
          }
        ]
      }
    },
    "workflow": {
      "basicWorkflow": {
        "steps": [
          "파일 수정",
          "스테이징 영역에 추가 (git add)",
          "변경사항 커밋 (git commit)",
          "원격 저장소에 푸시 (git push)"
        ]
      },
      "collaborationWorkflow": {
        "steps": [
          "원격 저장소 복제 (git clone)",
          "브랜치 생성 (git branch)",
          "작업 및 커밋",
          "원격 저장소 업데이트 (git pull)",
          "변경사항 푸시 (git push)",
          "풀 리퀘스트 생성"
        ]
      },
      "bestPractices": [
        "의미 있는 커밋 메시지 작성",
        "작은 단위로 자주 커밋",
        "공유 브랜치 rebase 금지",
        "pull 전에 local 변경사항 커밋"
      ]
    },
    "securityAndBackup": {
      "security": {
        "authentication": {
          "methods": [
            "SSH 키",
            "HTTPS 인증",
            "토큰 기반 인증"
          ]
        },
        "permissions": {
          "types": [
            "읽기 권한",
            "쓰기 권한",
            "관리자 권한"
          ]
        }
      },
      "backup": {
        "methods": [
          "원격 저장소 미러링",
          "정기적인 clone",
          "bare 저장소 백업"
        ],
        "recommendations": [
          "정기적인 백업 일정 수립",
          "다중 원격 저장소 활용",
          "중요 태그 보호"
        ]
      }
    }
  }