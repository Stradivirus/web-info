{
    "advantages": [
      {
        "title": "유연한 라우팅",
        "details": [
          "Exchange 타입(Direct, Topic, Fanout, Headers)을 통한 다양한 메시지 라우팅 패턴 지원",
          "메시지 큐잉, Pub/Sub, RPC 등 다양한 메시징 패턴 구현 가능",
          "바인딩 키를 통한 세밀한 메시지 필터링"
        ]
      },
      {
        "title": "신뢰성",
        "details": [
          "메시지 전달 보장(delivery acknowledgments)",
          "지속성(persistence) 지원으로 서버 재시작 시에도 메시지 보존",
          "클러스터링을 통한 고가용성 제공"
        ]
      },
      {
        "title": "관리 용이성",
        "details": [
          "직관적인 웹 기반 관리 인터페이스 제공",
          "상세한 모니터링과 통계 정보 제공",
          "플러그인 시스템을 통한 기능 확장 가능"
        ]
      },
      {
        "title": "다양한 프로토콜 지원",
        "details": [
          "AMQP 0-9-1 프로토콜 기반",
          "MQTT, STOMP 등 추가 프로토콜 지원",
          "다양한 언어와 프레임워크에서 클라이언트 라이브러리 제공"
        ]
      },
      {
        "title": "성숙도",
        "details": [
          "오랜 기간 검증된 안정성",
          "광범위한 커뮤니티 지원",
          "풍부한 문서화와 사용 사례"
        ]
      }
    ],
    "disadvantages": [
      {
        "title": "성능 제한",
        "details": [
          "Kafka에 비해 상대적으로 낮은 처리량",
          "큐에 메시지가 많이 쌓일 경우 성능 저하 가능",
          "대용량 메시지 처리시 메모리 사용량 증가"
        ]
      },
      {
        "title": "운영 복잡성",
        "details": [
          "클러스터 구성과 관리가 상대적으로 복잡",
          "Erlang 기반으로 트러블슈팅이 어려울 수 있음",
          "큐가 많아질 경우 관리 부담 증가"
        ]
      },
      {
        "title": "확장성 제한",
        "details": [
          "수평적 확장이 Kafka보다 제한적",
          "클러스터 노드 간 동기화 오버헤드",
          "대규모 분산 처리에 최적화되지 않음"
        ]
      }
    ],
    "useCases": {
      "examples": [
        {
          "title": "백그라운드 작업 처리",
          "details": "이메일 발송, 이미지 처리 등 비동기 작업 처리"
        },
        {
          "title": "마이크로서비스 통신",
          "details": "서비스 간 비동기 메시지 전달 및 이벤트 기반 통신"
        },
        {
          "title": "작업 분배",
          "details": "워커 프로세스들 간의 작업 부하 분산"
        },
        {
          "title": "요청-응답 패턴",
          "details": "RPC 스타일의 비동기 요청-응답 처리"
        },
        {
          "title": "이벤트 브로드캐스팅",
          "details": "팬아웃 방식의 이벤트 전파"
        }
      ],
      "suitable": [
        "중소규모 메시징 시스템",
        "복잡한 라우팅이 필요한 경우",
        "신뢰성 있는 메시지 전달이 중요한 경우",
        "다양한 메시징 패턴이 필요한 경우",
        "기존 AMQP 기반 시스템"
      ],
      "unsuitable": [
        "극히 높은 처리량이 필요한 경우",
        "대규모 스트리밍 데이터 처리",
        "매우 긴 기간의 메시지 보관이 필요한 경우",
        "단순한 메시징만 필요한 경우"
      ]
    },
    "clusteringInfo": {
      "description": "RabbitMQ 클러스터는 여러 노드를 하나의 논리적 브로커로 그룹화하여 고가용성과 확장성을 제공합니다.",
      "advantages": [
        "서비스 중단 없는 노드 추가/제거",
        "큐 미러링을 통한 고가용성",
        "노드 간 부하 분산",
        "관리 인터페이스 통합",
        "자동 동기화 지원"
      ],
      "configurations": [
        "최소 3개 노드 권장 (홀수 개수)",
        "큐 미러링 정책 설정",
        "네트워크 파티션 감지 설정",
        "메모리 및 디스크 알람 설정",
        "클러스터 이름 지정"
      ]
    },
    "features": [
      {
        "title": "Exchange 타입",
        "details": [
          "Direct: 정확한 라우팅 키 매칭",
          "Topic: 패턴 기반 라우팅",
          "Fanout: 브로드캐스트",
          "Headers: 헤더 기반 라우팅"
        ]
      },
      {
        "title": "메시지 특성",
        "details": [
          "우선순위 큐 지원",
          "TTL (Time-To-Live) 설정",
          "Dead Letter Exchanges",
          "메시지 지속성"
        ]
      },
      {
        "title": "보안",
        "details": [
          "사용자 인증 및 권한 관리",
          "SSL/TLS 지원",
          "VHOST를 통한 격리",
          "연결 제한 설정"
        ]
      }
    ]
  }