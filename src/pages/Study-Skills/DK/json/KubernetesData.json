{
    "advantages": [
      {
        "title": "자동화된 운영",
        "details": [
          "자동 스케일링 및 로드 밸런싱",
          "자가 복구 기능",
          "롤링 업데이트와 롤백"
        ]
      },
      {
        "title": "확장성",
        "details": [
          "수평/수직 확장 자동화",
          "클러스터 확장 용이",
          "멀티 클라우드/하이브리드 클라우드 지원"
        ]
      },
      {
        "title": "선언적 구성",
        "details": [
          "Infrastructure as Code",
          "버전 관리 용이",
          "일관된 환경 구성"
        ]
      }
    ],
    "disadvantages": [
      {
        "title": "복잡성",
        "details": [
          "steep learning curve",
          "많은 추상화 계층",
          "트러블슈팅 어려움"
        ]
      },
      {
        "title": "리소스 요구사항",
        "details": [
          "높은 초기 구성 비용",
          "관리 오버헤드",
          "운영 인력 필요성"
        ]
      }
    ],
    "resourceManagement": {
      "podResources": {
        "requests": {
          "description": "최소 필요 리소스 지정",
          "example": {
            "cpu": "100m",
            "memory": "128Mi"
          }
        },
        "limits": {
          "description": "최대 사용 가능 리소스",
          "example": {
            "cpu": "200m",
            "memory": "256Mi"
          }
        }
      },
      "autoscaling": {
        "hpa": {
          "description": "Horizontal Pod Autoscaling",
          "metrics": [
            "CPU 사용률",
            "메모리 사용률",
            "사용자 정의 메트릭"
          ]
        },
        "vpa": {
          "description": "Vertical Pod Autoscaling",
          "modes": [
            "Auto",
            "Initial",
            "Off"
          ]
        }
      }
    },
    "networking": {
      "serviceTypes": [
        {
          "type": "ClusterIP",
          "usage": "클러스터 내부 통신"
        },
        {
          "type": "NodePort",
          "usage": "외부 접근용 포트 할당"
        },
        {
          "type": "LoadBalancer",
          "usage": "클라우드 로드밸런서 연동"
        }
      ],
      "ingress": {
        "patterns": [
          "단일 서비스",
          "경로 기반 라우팅",
          "이름 기반 가상 호스팅"
        ]
      }
    },
    "storage": {
      "types": [
        {
          "name": "StorageClass",
          "description": "스토리지 프로비저닝 정책"
        },
        {
          "name": "PersistentVolume",
          "description": "물리 스토리지 리소스"
        },
        {
          "name": "PersistentVolumeClaim",
          "description": "스토리지 요청"
        }
      ],
      "provisioning": {
        "static": "미리 생성된 PV 사용",
        "dynamic": "요청시 자동 프로비저닝"
      }
    },
    "monitoring": {
      "stack": {
        "metrics": {
          "tools": ["Prometheus", "Grafana"],
          "metrics": [
            "리소스 사용량",
            "애플리케이션 메트릭",
            "클러스터 상태"
          ]
        },
        "logging": {
          "tools": ["Elasticsearch", "Fluentd", "Kibana"],
          "features": [
            "중앙화된 로그 수집",
            "로그 분석 및 시각화",
            "알림 설정"
          ]
        }
      }
    },
    "commands": {
      "basic": [
        {
          "command": "kubectl get",
          "description": "리소스 조회",
          "examples": [
            "kubectl get pods",
            "kubectl get pods -o wide",
            "kubectl get all -n namespace"
          ]
        },
        {
          "command": "kubectl describe",
          "description": "리소스 상세 정보",
          "examples": [
            "kubectl describe pod pod-name",
            "kubectl describe deployment dep-name"
          ]
        },
        {
          "command": "kubectl apply",
          "description": "리소스 생성/수정",
          "examples": [
            "kubectl apply -f file.yaml",
            "kubectl apply -k directory/"
          ]
        }
      ],
      "pod": [
        {
          "command": "kubectl logs",
          "description": "컨테이너 로그 확인",
          "examples": [
            "kubectl logs pod-name",
            "kubectl logs -f pod-name",
            "kubectl logs -p pod-name"
          ]
        },
        {
          "command": "kubectl exec",
          "description": "포드 내 명령어 실행",
          "examples": [
            "kubectl exec -it pod-name -- /bin/bash",
            "kubectl exec pod-name -- printenv"
          ]
        }
      ],
      "context": [
        {
          "command": "kubectl config",
          "description": "컨텍스트 관리",
          "examples": [
            "kubectl config current-context",
            "kubectl config use-context ctx-name",
            "kubectl config get-contexts"
          ]
        }
      ],
      "debugging": [
        {
          "command": "kubectl debug",
          "description": "디버깅",
          "examples": [
            "kubectl debug node/node-name -it",
            "kubectl debug pod/pod-name --copy-to=debug-pod"
          ]
        },
        {
          "command": "kubectl port-forward",
          "description": "포트 포워딩",
          "examples": [
            "kubectl port-forward pod/pod-name 8080:80",
            "kubectl port-forward svc/service-name 8080:80"
          ]
        }
      ],
      "maintenance": [
        {
          "command": "kubectl drain",
          "description": "노드 드레인",
          "examples": [
            "kubectl drain node-name",
            "kubectl drain node-name --ignore-daemonsets"
          ]
        },
        {
          "command": "kubectl taint",
          "description": "노드 테인트",
          "examples": [
            "kubectl taint nodes node-name key=value:NoSchedule",
            "kubectl taint nodes node-name key:NoSchedule-"
          ]
        }
      ]
    }
  }