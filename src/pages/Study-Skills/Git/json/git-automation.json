{
    "metadata": {
      "version": "2.0.0",
      "lastUpdated": "2024-03-21",
      "references": {
        "workflow": "git-workflow.json",
        "version": "git-version.json"
      }
    },
    "cicd": {
      "environments": {
        "development": {
          "description": "개발 환경 설정",
          "triggers": ["feature 브랜치 푸시", "develop 브랜치 병합"],
          "pipeline": [
            {
              "stage": "빌드",
              "steps": [
                "의존성 설치",
                "코드 컴파일",
                "정적 자원 빌드"
              ]
            },
            {
              "stage": "테스트",
              "steps": [
                "단위 테스트",
                "통합 테스트",
                "E2E 테스트"
              ],
              "requirements": {
                "coverage": "80% 이상",
                "performance": "응답시간 1초 이내"
              }
            },
            {
              "stage": "배포",
              "steps": [
                "개발 서버 배포",
                "smoke 테스트",
                "상태 체크"
              ]
            }
          ]
        },
        "staging": {
          "description": "스테이징 환경 설정",
          "triggers": ["release 브랜치 생성", "QA 요청"],
          "pipeline": [
            {
              "stage": "빌드",
              "steps": [
                "프로덕션 설정 적용",
                "최적화된 빌드",
                "아티팩트 생성"
              ]
            },
            {
              "stage": "검증",
              "steps": [
                "전체 테스트 스위트",
                "성능 테스트",
                "보안 검사"
              ],
              "requirements": {
                "coverage": "90% 이상",
                "performance": "응답시간 500ms 이내",
                "security": "중요 취약점 없음"
              }
            },
            {
              "stage": "배포",
              "steps": [
                "스테이징 서버 배포",
                "데이터 마이그레이션",
                "통합 테스트"
              ]
            }
          ]
        },
        "production": {
          "description": "프로덕션 환경 설정",
          "triggers": ["main 브랜치 병합", "릴리즈 승인"],
          "pipeline": [
            {
              "stage": "최종 검증",
              "steps": [
                "보안 감사",
                "성능 테스트",
                "규정 준수 검사"
              ]
            },
            {
              "stage": "배포",
              "strategy": "blue-green",
              "steps": [
                "새 환경 준비",
                "트래픽 전환",
                "이전 환경 백업"
              ]
            },
            {
              "stage": "모니터링",
              "steps": [
                "메트릭 수집",
                "로그 분석",
                "알림 설정"
              ]
            }
          ]
        }
      }
    },
    "automation": {
      "scripts": {
        "deployment": {
          "description": "배포 자동화 스크립트 예시",
          "example": {
            "name": "deploy.sh",
            "content": "#!/bin/bash\n# 환경 변수 설정\nENV=$1\n# 배포 전 검증\n./verify.sh\n# 배포 실행\ndocker-compose up -d\n# 상태 체크\n./healthcheck.sh"
          }
        },
        "backup": {
          "description": "백업 자동화 스크립트 예시",
          "example": {
            "name": "backup.sh",
            "content": "#!/bin/bash\n# 타임스탬프\nTIMESTAMP=$(date +%Y%m%d_%H%M%S)\n# DB 덤프\npg_dump db_name > backup_$TIMESTAMP.sql\n# 압축 및 저장\ntar -czf backup_$TIMESTAMP.tar.gz backup_$TIMESTAMP.sql"
          }
        }
      },
      "errorHandling": {
        "deploymentFailure": {
          "description": "배포 실패 시 자동 복구 프로세스",
          "steps": [
            "이전 버전으로 롤백",
            "관리자 알림 발송",
            "로그 수집 및 분석",
            "incident 리포트 생성"
          ]
        },
        "serviceOutage": {
          "description": "서비스 중단 시 자동 복구 프로세스",
          "steps": [
            "상태 확인",
            "자동 재시작 시도",
            "백업 서버 활성화",
            "긴급 알림 발송"
          ]
        }
      }
    },
    "monitoring": {
      "metrics": {
        "application": {
          "performance": [
            "응답 시간",
            "처리량",
            "에러율",
            "리소스 사용량"
          ],
          "business": [
            "활성 사용자 수",
            "트랜잭션 처리량",
            "전환율"
          ]
        },
        "infrastructure": {
          "system": [
            "CPU 사용률",
            "메모리 사용량",
            "디스크 I/O",
            "네트워크 트래픽"
          ],
          "container": [
            "컨테이너 상태",
            "리소스 사용량",
            "재시작 횟수"
          ]
        }
      },
      "alerting": {
        "channels": {
          "slack": {
            "events": [
              "배포 상태",
              "테스트 실패",
              "성능 저하",
              "보안 경고"
            ],
            "format": {
              "title": "[환경] 알림 유형",
              "content": "상세 내용\n영향: 영향도\n조치: 필요한 조치"
            }
          },
          "email": {
            "events": [
              "일일 리포트",
              "주간 성능 리포트",
              "월간 보안 리포트"
            ],
            "format": {
              "subject": "[시스템] 리포트 유형 - 날짜",
              "content": "요약\n상세 내용\n권장 조치"
            }
          }
        }
      }
    },
    "documentation": {
      "apiDocs": {
        "description": "API 문서 자동 생성 설정",
        "tools": ["Swagger", "OpenAPI"],
        "updateTriggers": ["API 변경", "버전 릴리즈"]
      },
      "changeLog": {
        "description": "변경 사항 문서화 자동화",
        "format": "## [버전] - 날짜\n### 추가\n### 변경\n### 수정\n### 제거"
      }
    }
  }