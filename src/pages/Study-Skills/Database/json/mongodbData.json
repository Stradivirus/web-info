{
    "name": "MongoDB",
    "description": "MongoDB는 문서 지향 NoSQL 데이터베이스 시스템입니다.",
    "mainFeatures": [
      {
        "title": "기본 특징",
        "details": [
          "문서 기반 저장 (BSON 형식)",
          "스키마 없는 구조",
          "수평적 확장성 (샤딩)",
          "고가용성 (복제 세트)",
          "강력한 쿼리 언어",
          "인덱싱 지원"
        ]
      }
    ],
    "advantages": [
      {
        "title": "유연한 스키마",
        "details": [
          "데이터 구조를 쉽게 변경할 수 있음",
          "다양한 형태의 데이터 저장 가능",
          "빠른 프로토타이핑과 개발 가능"
        ]
      },
      {
        "title": "확장성",
        "details": [
          "수평적 확장을 통한 대용량 데이터 처리",
          "샤딩을 통한 분산 처리",
          "높은 트래픽 처리에 최적화"
        ]
      },
      {
        "title": "개발 생산성",
        "details": [
          "스키마 설계에 드는 시간 최소화",
          "직관적인 문서 기반 구조",
          "풍부한 드라이버 지원"
        ]
      },
      {
        "title": "데이터 처리",
        "details": [
          "복잡한 중첩 데이터 구조 자연스러운 처리",
          "집계 파이프라인을 통한 강력한 데이터 분석",
          "지리공간 데이터 처리 지원"
        ]
      }
    ],
    "disadvantages": [
      {
        "title": "트랜잭션 제한",
        "details": [
          "다중 문서 트랜잭션 지원이 제한적",
          "ACID 속성 완전 보장의 어려움",
          "최신 버전에서 개선되었으나 여전히 RDBMS에 비해 제한적"
        ]
      },
      {
        "title": "조인 연산",
        "details": [
          "문서 간 조인 연산의 비효율성",
          "복잡한 관계 처리시 성능 저하 가능",
          "$lookup 사용시 성능 고려 필요"
        ]
      },
      {
        "title": "리소스 사용",
        "details": [
          "메모리 사용량이 높을 수 있음",
          "인덱스 크기가 커질 수 있음",
          "데이터 중복으로 인한 저장공간 증가"
        ]
      }
    ],
    "commandGuide": {
      "basic": {
        "title": "기본 명령어",
        "commands": [
          {
            "category": "접속",
            "examples": [
              "mongo                # 로컬 MongoDB 접속",
              "mongo \"mongodb://호스트:포트\"  # 원격 접속"
            ]
          },
          {
            "category": "데이터베이스 관리",
            "examples": [
              "show dbs            # 데이터베이스 목록",
              "use database_name   # DB 선택/생성",
              "db                  # 현재 DB 확인",
              "db.dropDatabase()   # 현재 DB 삭제"
            ]
          },
          {
            "category": "컬렉션 관리",
            "examples": [
              "show collections    # 컬렉션 목록",
              "db.createCollection(\"name\")  # 컬렉션 생성",
              "db.collection.drop()  # 컬렉션 삭제"
            ]
          }
        ]
      },
      "crud": {
        "title": "CRUD 작업",
        "operations": [
          {
            "category": "Create",
            "examples": [
              "db.collection.insertOne({name: \"John\"})",
              "db.collection.insertMany([{name: \"John\"}, {name: \"Jane\"}])"
            ]
          },
          {
            "category": "Read",
            "examples": [
              "db.collection.find()",
              "db.collection.find({age: {$gt: 25}})",
              "db.collection.find().sort({age: 1})",
              "db.collection.countDocuments()"
            ]
          },
          {
            "category": "Update",
            "examples": [
              "db.collection.updateOne({name: \"John\"}, {$set: {age: 31}})",
              "db.collection.updateMany({age: {$lt: 30}}, {$inc: {age: 1}})"
            ]
          },
          {
            "category": "Delete",
            "examples": [
              "db.collection.deleteOne({name: \"John\"})",
              "db.collection.deleteMany({age: {$lt: 25}})"
            ]
          }
        ]
      },
      "advanced": {
        "title": "고급 기능",
        "features": [
          {
            "category": "인덱스 관리",
            "examples": [
              "db.collection.createIndex({field: 1})",
              "db.collection.getIndexes()",
              "db.collection.dropIndex(\"index_name\")"
            ]
          },
          {
            "category": "집계",
            "examples": [
              "db.collection.aggregate([",
              "  {$match: {status: \"active\"}},",
              "  {$group: {_id: \"$category\", total: {$sum: \"$amount\"}}},",
              "  {$sort: {total: -1}}",
              "])"
            ]
          },
          {
            "category": "백업 및 복원",
            "examples": [
              "mongodump --db dbname --out /backup/path",
              "mongorestore --db dbname /backup/path"
            ]
          }
        ]
      }
    },
    "atlas": {
      "description": "MongoDB Atlas는 MongoDB에서 제공하는 완전 관리형 클라우드 데이터베이스 서비스(DBaaS)입니다.",
      "features": [
        {
          "title": "클라우드 통합",
          "details": [
            "AWS, Azure, GCP 멀티 클라우드 지원",
            "클라우드 제공업체 간 데이터 마이그레이션 가능",
            "통합된 청구 및 모니터링"
          ]
        },
        {
          "title": "자동화 기능",
          "details": [
            "자동 스케일링 지원",
            "자동 백업 및 시점 복구",
            "자동 패치 및 마이너 버전 업그레이드",
            "자동 장애 조치 구성"
          ]
        },
        {
          "title": "보안 기능",
          "details": [
            "네트워크 격리 및 VPC 피어링",
            "IP 화이트리스팅",
            "RBAC(Role-Based Access Control)",
            "필드 레벨 암호화",
            "저장 및 전송 중 데이터 암호화"
          ]
        }
      ],
      "advantages": [
        {
          "title": "운영 효율성",
          "details": [
            "인프라 관리 부담 감소",
            "자동화된 유지보수",
            "24/7 모니터링 및 알림",
            "간편한 클러스터 구성"
          ]
        },
        {
          "title": "확장성",
          "details": [
            "버튼 클릭으로 수평/수직 확장 가능",
            "글로벌 클러스터 구성 용이",
            "트래픽에 따른 자동 확장"
          ]
        }
      ],
      "disadvantages": [
        {
          "title": "비용",
          "details": [
            "자체 호스팅 대비 높은 운영 비용",
            "트래픽/저장소 증가에 따른 비용 증가",
            "부가 기능 사용시 추가 비용 발생"
          ]
        },
        {
          "title": "제한사항",
          "details": [
            "일부 고급 설정 옵션 제한",
            "클라우드 공급자 종속성",
            "특정 리전 제한 가능성"
          ]
        }
      ],
      "pricing": {
        "tiers": [
          {
            "name": "Free Tier",
            "details": [
              "공유 RAM 및 512MB 스토리지",
              "기본 모니터링 도구",
              "샘플 프로젝트에 적합"
            ]
          },
          {
            "name": "Shared Tier",
            "details": [
              "공유 리소스로 저비용",
              "개발 및 소규모 프로덕션",
              "기본 백업 기능"
            ]
          },
          {
            "name": "Dedicated Tier",
            "details": [
              "전용 리소스",
              "프로덕션 워크로드",
              "고급 보안 기능",
              "우선 순위 지원"
            ]
          }
        ]
      }
    },
    "useCases": {
      "examples": [
        {
          "title": "콘텐츠 관리",
          "details": "블로그, CMS, 문서 관리 시스템"
        },
        {
          "title": "실시간 분석",
          "details": "로그 분석, 실시간 analytics, IoT 데이터 처리"
        },
        {
          "title": "모바일 애플리케이션",
          "details": "유연한 스키마를 활용한 모바일 앱 백엔드"
        }
      ],
      "suitable": [
        "대용량 비정형 데이터 처리가 필요한 경우",
        "빠른 읽기/쓰기가 필요한 실시간 애플리케이션",
        "자주 변경되는 데이터 구조를 다루는 경우",
        "수평적 확장이 필요한 대규모 시스템"
      ],
      "unsuitable": [
        "복잡한 트랜잭션이 필요한 경우",
        "데이터 정합성이 매우 중요한 시스템",
        "복잡한 조인 연산이 많은 경우",
        "관계형 데이터 모델이 더 적합한 경우"
      ]
    }
  }