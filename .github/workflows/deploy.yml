name: Deploy to S3 and Invalidate CloudFront

on:
 push:
   branches:
     - dev

jobs:
 deploy:
   runs-on: ubuntu-latest
   permissions:
     contents: write
   steps:
     - uses: actions/checkout@v4
       with:
         fetch-depth: 0
         token: ${{ secrets.PAT }}

     - name: Setup Node.js
       uses: actions/setup-node@v4
       with:
         node-version: '20'

     - name: Check Deploy Condition
       id: check
       run: |
         if [[ "${{ github.event.head_commit.message }}" == *"[100]"* ]] || [[ "${{ github.event.head_commit.message }}" == *"[010]"* ]]; then
           echo "SHOULD_DEPLOY=true" >> $GITHUB_ENV
         else
           echo "SHOULD_DEPLOY=false" >> $GITHUB_ENV
         fi

     - name: Configure Git
       run: |
         git config --global user.name 'github-actions[bot]'
         git config --global user.email 'github-actions[bot]@users.noreply.github.com'

     - name: Merge and Update Version
       if: env.SHOULD_DEPLOY == 'true'
       run: |
         # 현재 버전 읽기
         current_version=$(node -p "require('./package.json').version")
         IFS='.' read -r major minor patch <<< "$current_version"
         
         # 버전 업데이트 체크
         if [[ "${{ github.event.head_commit.message }}" == *"[100]"* ]]; then
           new_version="$((major + 1)).0.0"
         else
           new_version="$major.$((minor + 1)).0"
         fi
         
         # master로 전환 및 merge
         git fetch origin master:master
         git checkout master
         git merge --no-ff dev -m "Merge dev into master for deployment"
         
         # master에서만 버전 업데이트
         npm version $new_version --no-git-tag-version
         git add package.json package-lock.json
         git commit -m "Update version to $new_version"
         git push origin master

     - name: Install Dependencies
       if: env.SHOULD_DEPLOY == 'true'
       run: npm install
       
     - name: Set build time
       if: env.SHOULD_DEPLOY == 'true'
       run: |
         ampm=$(TZ='Asia/Seoul' date +%p)
         if [ "$ampm" = "AM" ]; then
           period="오전"
         else
           period="오후"
         fi
         echo "REACT_APP_BUILD_TIME=$(TZ='Asia/Seoul' date +%Y년\ %m월\ %d일) $period $(TZ='Asia/Seoul' date +%I시)" >> $GITHUB_ENV
         
     - name: Build
       if: env.SHOULD_DEPLOY == 'true'
       env:
         REACT_APP_BUILD_TIME: ${{ env.REACT_APP_BUILD_TIME }}
       run: npm run build
       
     - name: Configure AWS Credentials
       if: env.SHOULD_DEPLOY == 'true'
       uses: aws-actions/configure-aws-credentials@v4
       with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: ap-northeast-2
         
     - name: Deploy to S3
       if: env.SHOULD_DEPLOY == 'true'
       run: aws s3 sync build/ s3://web-info --delete
       
     - name: Invalidate CloudFront
       if: env.SHOULD_DEPLOY == 'true'
       run: |
         aws cloudfront create-invalidation \
           --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
           --paths "/*"